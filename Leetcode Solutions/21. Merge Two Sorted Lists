/*
Question Link- https://leetcode.com/problems/merge-two-sorted-lists/
*/

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
        if(!l1)
            return l2;
        if(!l2)
            return l1;
        if(l1->val>l2->val)
            return mergeTwoLists(l2,l1);
        ListNode *head=l1,*pt=l1;
        l1=l1->next;
        pt->next=NULL;
        while(l1 && l2)
        {
            if(l1->val<=l2->val)
            {
                pt->next=l1;
                l1=l1->next;
            }
            else
            {
                pt->next=l2;
                l2=l2->next;
            }
            pt=pt->next;
            pt->next=NULL;
        }
        if(l1)
        {
            pt->next=l1;
        }
        if(l2)
            pt->next=l2;
        return head;
    }
};
