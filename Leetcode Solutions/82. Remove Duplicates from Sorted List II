/*
Question Link- https://leetcode.com/problems/remove-duplicates-from-sorted-list-ii/
*/

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {
        if(!head || !head->next)
            return head;
        ListNode *pt=NULL,*slow=head,*fast=head;
        head=NULL;
        while(fast)
        {
            fast=fast->next;
            if(fast && slow->val==fast->val)
            {
                while(fast && fast->val==slow->val)
                    fast=fast->next;
                slow=fast;
            }
            else
            {
                if(!head)
                    head=slow;
                if(pt)
                pt->next=slow;
                    pt=slow;
                slow=fast;
                pt->next=NULL;
            }
        }        
        return head;
    }
};
