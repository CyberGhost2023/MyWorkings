/*
Question Link- https://leetcode.com/problems/simple-bank-system/
*/

class Bank {
public:
    vector<long long> bankbal;
    int n;
    Bank(vector<long long>& balance) {
        n=balance.size();
        for(int i=0;i<balance.size();i++)
        {
            bankbal.push_back(balance[i]);
        }
    }
    
    bool transfer(int account1, int account2, long long money) {
        if(1<=account1 && account1<=n && 1<=account2 && account2<=n)
        {
            if(bankbal[account1-1]>=money)
            {
                bankbal[account2-1]+=money;
                bankbal[account1-1]-=money;
                return 1;               
            }
        }
        return 0;
    }
    
    bool deposit(int account, long long money) {
        if(1<=account && account<=n)
        {
                bankbal[account-1]+=money;
                return 1;               
        }
        return 0;
    }
    
    bool withdraw(int account, long long money) {
        if(1<=account && account<=n)
        {
            if(bankbal[account-1]>=money)
            {
                bankbal[account-1]-=money;
                return 1;           
            }
        }
        return 0;   
    }
};

/**
 * Your Bank object will be instantiated and called as such:
 * Bank* obj = new Bank(balance);
 * bool param_1 = obj->transfer(account1,account2,money);
 * bool param_2 = obj->deposit(account,money);
 * bool param_3 = obj->withdraw(account,money);
 */
