/*
Question Link- https://leetcode.com/problems/maximum-number-of-points-with-cost/
*/


#define ll long long
class Solution {
public:
    long long maxPoints(vector<vector<int>>& pt) {
        int n=pt.size(),m=pt[0].size();
        vector<vector<ll>> dp(n,vector<ll>(m,-1));
        for(int i=0;i<m;i++)
        {
            dp[0][i]=pt[0][i];
        }
        for(int i=1;i<n;i++)
        {
            vector<ll> lt(m),rt(m);
            lt[0]=dp[i-1][0];
            rt[m-1]=dp[i-1][m-1];
            for(int j=1;j<m;j++)
            {
                lt[j]=max(lt[j-1]-1,dp[i-1][j]);
            }
            for(int j=m-2;j>=0;j--)
            {
                rt[j]=max(rt[j+1]-1,dp[i-1][j]);
            }
            for(int j=0;j<m;j++)
            {
                dp[i][j]=pt[i][j]+max(lt[j],rt[j]);
            }
        }
        ll mx=-1;
        for(int i=0;i<m;i++)
            mx=max(dp[n-1][i],mx);
        return mx;
        
        
    }
};
